name: Release

on:
  push:
    tags:
      - "*"

jobs:
  builds-on-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable

      - run: |
          rustup target add wasm32-unknown-unknown

          rustup target add x86_64-pc-windows-msvc
          make clean-app
          make CARGO_FLAGS="--target x86_64-pc-windows-msvc"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          7z a -mx=9 wasi-update_${{ github.ref_name }}_windows-x86_64.zip wasi-update

          rustup target add aarch64-pc-windows-msvc
          make clean-app
          make CARGO_FLAGS="--target aarch64-pc-windows-msvc"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          7z a -mx=9 wasi-update_${{ github.ref_name }}_windows-aarch64.zip wasi-update

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-win-x86_64
          path: wasi-update_${{ github.ref_name }}_windows-x86_64.zip

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-win-aarch64
          path: wasi-update_${{ github.ref_name }}_windows-aarch64.zip

  build-on-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable

      - run: |
          rustup target add aarch64-apple-darwin
          make CARGO_FLAGS="--target aarch64-apple-darwin"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          tar cjpf wasi-update_${{ github.ref_name }}_macos-aarch64.tar.bz2 wasi-update

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-macos-aarch64
          path: wasi-update_${{ github.ref_name }}_macos-aarch64.tar.bz2

  build-on-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@2a9625d550eefc3a9b1a43d342ad655f563f8241
        with:
          version: 0.12.0

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable

      - run: |
          cargo install cargo-zigbuild

          rustup target add wasm32-unknown-unknown
          cargo install cargo-deb

          make
          ( cd src && cargo deb --output=../wasi-update_${{ github.ref_name }}_amd64.deb --no-build )

          rustup target add x86_64-unknown-linux-gnu
          make clean-app
          make CARGO_FLAGS="--target x86_64-unknown-linux-gnu"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          tar cjpf wasi-update_${{ github.ref_name }}_linux-x86_64.tar.bz2 wasi-update

          rustup target add aarch64-unknown-linux-gnu
          make clean-app
          make CARGO_FLAGS="--target aarch64-unknown-linux-gnu"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          tar cjpf wasi-update_${{ github.ref_name }}_linux-aarch64.tar.bz2 wasi-update

          rustup target add wasm32-wasi
          make clean-app
          make CARGO_FLAGS="--target wasm32-wasi"
          install -d wasi-update
          install bin/wasi-update* wasi-update/
          tar cjpf wasi-update_${{ github.ref_name }}_wasm32-wasi.tar.bz2 wasi-update

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-linux-x86_64
          path: wasi-update_${{ github.ref_name }}_linux-x86_64.tar.bz2

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-linux-aarch64
          path: wasi-update_${{ github.ref_name }}_linux-aarch64.tar.bz2

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-wasm32-wasi
          path: wasi-update_${{ github.ref_name }}_wasm32-wasi.tar.bz2

      - uses: actions/upload-artifact@v4
        with:
          name: wasi-update-deb-linux-x86_64
          path: wasi-update_${{ github.ref_name }}_amd64.deb

  release:
    needs:
      - builds-on-windows
      - build-on-macos
      - build-on-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            wasi-update-deb-linux-x86_64/*.deb
            wasi-update-linux-x86_64/*.tar.bz2
            wasi-update-linux-aarch64/*.tar.bz2
            wasi-update-wasm32-wasi/*.tar.bz2
            wasi-update-macos-aarch64/*.tar.bz2
            wasi-update-win-x86_64/*.zip
            wasi-update-win-aarch64/*.zip